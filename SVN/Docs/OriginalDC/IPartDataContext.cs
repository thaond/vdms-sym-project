//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool.
// Code is generated on: 4/8/2009 7:35:59 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace VDMS.II.Interface.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name = "VDMS")] 
	[ProviderAttribute(typeof(Devart.Data.Oracle.Linq.Provider.OracleDataProvider))] 
	public partial class IPartDataContext : Devart.Data.Linq.DataContext
	{
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void InsertIOrderHeader(VDMS.II.Interface.Entity.IOrderHeader instance);
		partial void UpdateIOrderHeader(VDMS.II.Interface.Entity.IOrderHeader instance);
		partial void DeleteIOrderHeader(VDMS.II.Interface.Entity.IOrderHeader instance);
		partial void InsertIOrderDetail(VDMS.II.Interface.Entity.IOrderDetail instance);
		partial void UpdateIOrderDetail(VDMS.II.Interface.Entity.IOrderDetail instance);
		partial void DeleteIOrderDetail(VDMS.II.Interface.Entity.IOrderDetail instance);
		partial void InsertIShipping(VDMS.II.Interface.Entity.IShipping instance);
		partial void UpdateIShipping(VDMS.II.Interface.Entity.IShipping instance);
		partial void DeleteIShipping(VDMS.II.Interface.Entity.IShipping instance);
		#endregion

		public IPartDataContext() :
				base(@"User Id=vdms;Password=vdms;Server=vdms;Unicode=True", mappingSource)
		{
			OnCreated();
		}

		public IPartDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public IPartDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public IPartDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public IPartDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public Devart.Data.Linq.Table<VDMS.II.Interface.Entity.IOrderHeader> IOrderHeaders
		{
			get
			{
				return this.GetTable<VDMS.II.Interface.Entity.IOrderHeader>();
			}
		}

		public Devart.Data.Linq.Table<VDMS.II.Interface.Entity.IOrderDetail> IOrderDetails
		{
			get
			{
				return this.GetTable<VDMS.II.Interface.Entity.IOrderDetail>();
			}
		}

		public Devart.Data.Linq.Table<VDMS.II.Interface.Entity.IShipping> IShippings
		{
			get
			{
				return this.GetTable<VDMS.II.Interface.Entity.IShipping>();
			}
		}
	}
	}

namespace VDMS.II.Interface.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;

	[Table(Name = @"VDMS.TC_VDP_FILE")]
	public partial class IOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private long _VDMSOrderId;

		private string _TipTopOrderNumber;

		private string _DealerCode;

		private string _DeliveryCode;

		private string _InvoiceCode;

		private System.DateTime _OrderDate;

		private System.Nullable<System.DateTime> _QuotationDate;

		private System.Nullable<System.DateTime> _PaymentDate;

		private System.Nullable<System.DateTime> _DeliveryDate;

		private System.Nullable<System.DateTime> _ShippingDate;

		private string _OrderType;

		private string _Flag;

		private string _TipTopProcess;

		private string _OrderComment;

		private string _DatabaseCode;

		private string _TC_VDP16;

		private System.Nullable<double> _TC_VDP17;

		private System.Nullable<System.DateTime> _TC_VDP18;

		private EntitySet<IOrderDetail> _IOrderDetails;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVDMSOrderIdChanging(long value);
		partial void OnVDMSOrderIdChanged();
		partial void OnTipTopOrderNumberChanging(string value);
		partial void OnTipTopOrderNumberChanged();
		partial void OnDealerCodeChanging(string value);
		partial void OnDealerCodeChanged();
		partial void OnDeliveryCodeChanging(string value);
		partial void OnDeliveryCodeChanged();
		partial void OnInvoiceCodeChanging(string value);
		partial void OnInvoiceCodeChanged();
		partial void OnOrderDateChanging(System.DateTime value);
		partial void OnOrderDateChanged();
		partial void OnQuotationDateChanging(System.Nullable<System.DateTime> value);
		partial void OnQuotationDateChanged();
		partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
		partial void OnPaymentDateChanged();
		partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
		partial void OnDeliveryDateChanged();
		partial void OnShippingDateChanging(System.Nullable<System.DateTime> value);
		partial void OnShippingDateChanged();
		partial void OnOrderTypeChanging(string value);
		partial void OnOrderTypeChanged();
		partial void OnFlagChanging(string value);
		partial void OnFlagChanged();
		partial void OnTipTopProcessChanging(string value);
		partial void OnTipTopProcessChanged();
		partial void OnOrderCommentChanging(string value);
		partial void OnOrderCommentChanged();
		partial void OnDatabaseCodeChanging(string value);
		partial void OnDatabaseCodeChanged();
		partial void OnTC_VDP16Changing(string value);
		partial void OnTC_VDP16Changed();
		partial void OnTC_VDP17Changing(System.Nullable<double> value);
		partial void OnTC_VDP17Changed();
		partial void OnTC_VDP18Changing(System.Nullable<System.DateTime> value);
		partial void OnTC_VDP18Changed();
		#endregion

		public IOrderHeader()
		{
			this._IOrderDetails = new EntitySet<IOrderDetail>(new Action<IOrderDetail>(this.attach_IOrderDetails), new Action<IOrderDetail>(this.detach_IOrderDetails));
			OnCreated();
		}

		[Column(Name = @"TC_VDP01", Storage = "_VDMSOrderId", CanBeNull = false, DbType = "NUMBER(19) NOT NULL", IsPrimaryKey = true)]
		public long VDMSOrderId
		{
			get
			{
				return this._VDMSOrderId;
			}
			set
			{
				if (this._VDMSOrderId != value)
				{
					this.OnVDMSOrderIdChanging(value);
					this.SendPropertyChanging();
					this._VDMSOrderId = value;
					this.SendPropertyChanged("VDMSOrderId");
					this.OnVDMSOrderIdChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP02", Storage = "_TipTopOrderNumber", DbType = "VARCHAR2(30)")]
		public string TipTopOrderNumber
		{
			get
			{
				return this._TipTopOrderNumber;
			}
			set
			{
				if (this._TipTopOrderNumber != value)
				{
					this.OnTipTopOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._TipTopOrderNumber = value;
					this.SendPropertyChanged("TipTopOrderNumber");
					this.OnTipTopOrderNumberChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP03", Storage = "_DealerCode", CanBeNull = false, DbType = "VARCHAR2(30) NOT NULL")]
		public string DealerCode
		{
			get
			{
				return this._DealerCode;
			}
			set
			{
				if (this._DealerCode != value)
				{
					this.OnDealerCodeChanging(value);
					this.SendPropertyChanging();
					this._DealerCode = value;
					this.SendPropertyChanged("DealerCode");
					this.OnDealerCodeChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP04", Storage = "_DeliveryCode", CanBeNull = false, DbType = "VARCHAR2(30) NOT NULL")]
		public string DeliveryCode
		{
			get
			{
				return this._DeliveryCode;
			}
			set
			{
				if (this._DeliveryCode != value)
				{
					this.OnDeliveryCodeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCode = value;
					this.SendPropertyChanged("DeliveryCode");
					this.OnDeliveryCodeChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP05", Storage = "_InvoiceCode", DbType = "VARCHAR2(30)")]
		public string InvoiceCode
		{
			get
			{
				return this._InvoiceCode;
			}
			set
			{
				if (this._InvoiceCode != value)
				{
					this.OnInvoiceCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCode = value;
					this.SendPropertyChanged("InvoiceCode");
					this.OnInvoiceCodeChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP06", Storage = "_OrderDate", CanBeNull = false, DbType = "TIMESTAMP(6) NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if (this._OrderDate != value)
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP07", Storage = "_QuotationDate", DbType = "TIMESTAMP(6)")]
		public System.Nullable<System.DateTime> QuotationDate
		{
			get
			{
				return this._QuotationDate;
			}
			set
			{
				if (this._QuotationDate != value)
				{
					this.OnQuotationDateChanging(value);
					this.SendPropertyChanging();
					this._QuotationDate = value;
					this.SendPropertyChanged("QuotationDate");
					this.OnQuotationDateChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP08", Storage = "_PaymentDate", DbType = "TIMESTAMP(6)")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if (this._PaymentDate != value)
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP09", Storage = "_DeliveryDate", DbType = "TIMESTAMP(6)")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if (this._DeliveryDate != value)
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP10", Storage = "_ShippingDate", DbType = "TIMESTAMP(6)")]
		public System.Nullable<System.DateTime> ShippingDate
		{
			get
			{
				return this._ShippingDate;
			}
			set
			{
				if (this._ShippingDate != value)
				{
					this.OnShippingDateChanging(value);
					this.SendPropertyChanging();
					this._ShippingDate = value;
					this.SendPropertyChanged("ShippingDate");
					this.OnShippingDateChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP11", Storage = "_OrderType", CanBeNull = false, DbType = "CHAR(1) NOT NULL")]
		public string OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if (this._OrderType != value)
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP12", Storage = "_Flag", DbType = "CHAR(2)")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if (this._Flag != value)
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP13", Storage = "_TipTopProcess", DbType = "CHAR(1)")]
		public string TipTopProcess
		{
			get
			{
				return this._TipTopProcess;
			}
			set
			{
				if (this._TipTopProcess != value)
				{
					this.OnTipTopProcessChanging(value);
					this.SendPropertyChanging();
					this._TipTopProcess = value;
					this.SendPropertyChanged("TipTopProcess");
					this.OnTipTopProcessChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP14", Storage = "_OrderComment", DbType = "VARCHAR2(250)")]
		public string OrderComment
		{
			get
			{
				return this._OrderComment;
			}
			set
			{
				if (this._OrderComment != value)
				{
					this.OnOrderCommentChanging(value);
					this.SendPropertyChanging();
					this._OrderComment = value;
					this.SendPropertyChanged("OrderComment");
					this.OnOrderCommentChanged();
				}
			}
		}

		[Column(Name = @"TC_VDP15", Storage = "_DatabaseCode", DbType = "CHAR(3)")]
		public string DatabaseCode
		{
			get
			{
				return this._DatabaseCode;
			}
			set
			{
				if (this._DatabaseCode != value)
				{
					this.OnDatabaseCodeChanging(value);
					this.SendPropertyChanging();
					this._DatabaseCode = value;
					this.SendPropertyChanged("DatabaseCode");
					this.OnDatabaseCodeChanged();
				}
			}
		}

		[Column(Storage = "_TC_VDP16", DbType = "VARCHAR2(200)")]
		public string TC_VDP16
		{
			get
			{
				return this._TC_VDP16;
			}
			set
			{
				if (this._TC_VDP16 != value)
				{
					this.OnTC_VDP16Changing(value);
					this.SendPropertyChanging();
					this._TC_VDP16 = value;
					this.SendPropertyChanged("TC_VDP16");
					this.OnTC_VDP16Changed();
				}
			}
		}

		[Column(Storage = "_TC_VDP17", DbType = "NUMBER(10)")]
		public System.Nullable<double> TC_VDP17
		{
			get
			{
				return this._TC_VDP17;
			}
			set
			{
				if (this._TC_VDP17 != value)
				{
					this.OnTC_VDP17Changing(value);
					this.SendPropertyChanging();
					this._TC_VDP17 = value;
					this.SendPropertyChanged("TC_VDP17");
					this.OnTC_VDP17Changed();
				}
			}
		}

		[Column(Storage = "_TC_VDP18", DbType = "TIMESTAMP(6)")]
		public System.Nullable<System.DateTime> TC_VDP18
		{
			get
			{
				return this._TC_VDP18;
			}
			set
			{
				if (this._TC_VDP18 != value)
				{
					this.OnTC_VDP18Changing(value);
					this.SendPropertyChanging();
					this._TC_VDP18 = value;
					this.SendPropertyChanged("TC_VDP18");
					this.OnTC_VDP18Changed();
				}
			}
		}

		[Association(Name="IOrderHeader_IOrderDetail", Storage="_IOrderDetails", OtherKey="VDMSOrderId")]
		public EntitySet<IOrderDetail> IOrderDetails
		{
			get
			{

				return this._IOrderDetails;
			}
			set
			{
				this._IOrderDetails.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}

		private void attach_IOrderDetails(IOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.IOrderHeader = this;
		}
		
		private void detach_IOrderDetails(IOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.IOrderHeader = null;
		}
	}

	[Table(Name = @"VDMS.TC_VDQ_FILE")]
	public partial class IOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private long _VDMSOrderId;

		private int _LineNumber;

		private string _PartCode;

		private System.Nullable<int> _OrderQuantity;

		private System.Nullable<int> _ConfirmQuantity;

		private long _Price;

		private string _TC_VDQ07;

		private System.Nullable<double> _TC_VDQ08;

		private System.Nullable<System.DateTime> _TC_VDQ09;

		private string _TC_VDQ10;

		private string _TC_VDQ11;

		private EntityRef<IOrderHeader> _IOrderHeader;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVDMSOrderIdChanging(long value);
		partial void OnVDMSOrderIdChanged();
		partial void OnLineNumberChanging(int value);
		partial void OnLineNumberChanged();
		partial void OnPartCodeChanging(string value);
		partial void OnPartCodeChanged();
		partial void OnOrderQuantityChanging(System.Nullable<int> value);
		partial void OnOrderQuantityChanged();
		partial void OnConfirmQuantityChanging(System.Nullable<int> value);
		partial void OnConfirmQuantityChanged();
		partial void OnPriceChanging(long value);
		partial void OnPriceChanged();
		partial void OnTC_VDQ07Changing(string value);
		partial void OnTC_VDQ07Changed();
		partial void OnTC_VDQ08Changing(System.Nullable<double> value);
		partial void OnTC_VDQ08Changed();
		partial void OnTC_VDQ09Changing(System.Nullable<System.DateTime> value);
		partial void OnTC_VDQ09Changed();
		partial void OnTC_VDQ10Changing(string value);
		partial void OnTC_VDQ10Changed();
		partial void OnTC_VDQ11Changing(string value);
		partial void OnTC_VDQ11Changed();
		#endregion

		public IOrderDetail()
		{
			this._IOrderHeader = default(EntityRef<IOrderHeader>);
			OnCreated();
		}

		[Column(Name = @"TC_VDQ01", Storage = "_VDMSOrderId", CanBeNull = false, DbType = "NUMBER(19) NOT NULL", IsPrimaryKey = true)]
		public long VDMSOrderId
		{
			get
			{
				return this._VDMSOrderId;
			}
			set
			{
				if (this._VDMSOrderId != value)
				{
					if (this._IOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVDMSOrderIdChanging(value);
					this.SendPropertyChanging();
					this._VDMSOrderId = value;
					this.SendPropertyChanged("VDMSOrderId");
					this.OnVDMSOrderIdChanged();
				}
			}
		}

		[Column(Name = @"TC_VDQ02", Storage = "_LineNumber", CanBeNull = false, DbType = "NUMBER(38) NOT NULL", IsPrimaryKey = true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if (this._LineNumber != value)
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}

		[Column(Name = @"TC_VDQ03", Storage = "_PartCode", DbType = "VARCHAR2(30)")]
		public string PartCode
		{
			get
			{
				return this._PartCode;
			}
			set
			{
				if (this._PartCode != value)
				{
					this.OnPartCodeChanging(value);
					this.SendPropertyChanging();
					this._PartCode = value;
					this.SendPropertyChanged("PartCode");
					this.OnPartCodeChanged();
				}
			}
		}

		[Column(Name = @"TC_VDQ04", Storage = "_OrderQuantity", DbType = "NUMBER(38)")]
		public System.Nullable<int> OrderQuantity
		{
			get
			{
				return this._OrderQuantity;
			}
			set
			{
				if (this._OrderQuantity != value)
				{
					this.OnOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderQuantity = value;
					this.SendPropertyChanged("OrderQuantity");
					this.OnOrderQuantityChanged();
				}
			}
		}

		[Column(Name = @"TC_VDQ05", Storage = "_ConfirmQuantity", DbType = "NUMBER(38)")]
		public System.Nullable<int> ConfirmQuantity
		{
			get
			{
				return this._ConfirmQuantity;
			}
			set
			{
				if (this._ConfirmQuantity != value)
				{
					this.OnConfirmQuantityChanging(value);
					this.SendPropertyChanging();
					this._ConfirmQuantity = value;
					this.SendPropertyChanged("ConfirmQuantity");
					this.OnConfirmQuantityChanged();
				}
			}
		}

		[Column(Name = @"TC_VDQ06", Storage = "_Price", CanBeNull = false, DbType = "NUMBER(19) NOT NULL")]
		public long Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if (this._Price != value)
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}

		[Column(Storage = "_TC_VDQ07", DbType = "VARCHAR2(299)")]
		public string TC_VDQ07
		{
			get
			{
				return this._TC_VDQ07;
			}
			set
			{
				if (this._TC_VDQ07 != value)
				{
					this.OnTC_VDQ07Changing(value);
					this.SendPropertyChanging();
					this._TC_VDQ07 = value;
					this.SendPropertyChanged("TC_VDQ07");
					this.OnTC_VDQ07Changed();
				}
			}
		}

		[Column(Storage = "_TC_VDQ08", DbType = "NUMBER(10)")]
		public System.Nullable<double> TC_VDQ08
		{
			get
			{
				return this._TC_VDQ08;
			}
			set
			{
				if (this._TC_VDQ08 != value)
				{
					this.OnTC_VDQ08Changing(value);
					this.SendPropertyChanging();
					this._TC_VDQ08 = value;
					this.SendPropertyChanged("TC_VDQ08");
					this.OnTC_VDQ08Changed();
				}
			}
		}

		[Column(Storage = "_TC_VDQ09", DbType = "TIMESTAMP(6)")]
		public System.Nullable<System.DateTime> TC_VDQ09
		{
			get
			{
				return this._TC_VDQ09;
			}
			set
			{
				if (this._TC_VDQ09 != value)
				{
					this.OnTC_VDQ09Changing(value);
					this.SendPropertyChanging();
					this._TC_VDQ09 = value;
					this.SendPropertyChanged("TC_VDQ09");
					this.OnTC_VDQ09Changed();
				}
			}
		}

		[Column(Storage = "_TC_VDQ10", DbType = "varchar2(1)")]
		public string TC_VDQ10
		{
			get
			{
				return this._TC_VDQ10;
			}
			set
			{
				if (this._TC_VDQ10 != value)
				{
					this.OnTC_VDQ10Changing(value);
					this.SendPropertyChanging();
					this._TC_VDQ10 = value;
					this.SendPropertyChanged("TC_VDQ10");
					this.OnTC_VDQ10Changed();
				}
			}
		}

		[Column(Storage = "_TC_VDQ11", DbType = "varchar2(250)")]
		public string TC_VDQ11
		{
			get
			{
				return this._TC_VDQ11;
			}
			set
			{
				if (this._TC_VDQ11 != value)
				{
					this.OnTC_VDQ11Changing(value);
					this.SendPropertyChanging();
					this._TC_VDQ11 = value;
					this.SendPropertyChanged("TC_VDQ11");
					this.OnTC_VDQ11Changed();
				}
			}
		}

		[Association(Name="IOrderHeader_IOrderDetail", Storage="_IOrderHeader", ThisKey="VDMSOrderId", IsForeignKey=true)]
		public IOrderHeader IOrderHeader
		{
			get
			{
				return this._IOrderHeader.Entity;
			}
			set
			{
				IOrderHeader previousValue = this._IOrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._IOrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IOrderHeader.Entity = null;
						previousValue.IOrderDetails.Remove(this);
					}
					this._IOrderHeader.Entity = value;
					if ((value != null))
					{
						value.IOrderDetails.Add(this);
						this._VDMSOrderId = value.VDMSOrderId;
					}
					else
					{
						this._VDMSOrderId = default(long); 
					}
					this.SendPropertyChanged("IOrderHeader");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}

	[Table(Name = @"VDMS.TC_VDR_FILE")]
	public partial class IShipping : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private long _VDMSOrderId;

		private int _LineNumber;

		private string _IssueNumber;

		private string _PartCode;

		private int _ShippingQuantity;

		private System.DateTime _ShippingDate;

		private string _Flag;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVDMSOrderIdChanging(long value);
		partial void OnVDMSOrderIdChanged();
		partial void OnLineNumberChanging(int value);
		partial void OnLineNumberChanged();
		partial void OnIssueNumberChanging(string value);
		partial void OnIssueNumberChanged();
		partial void OnPartCodeChanging(string value);
		partial void OnPartCodeChanged();
		partial void OnShippingQuantityChanging(int value);
		partial void OnShippingQuantityChanged();
		partial void OnShippingDateChanging(System.DateTime value);
		partial void OnShippingDateChanged();
		partial void OnFlagChanging(string value);
		partial void OnFlagChanged();
		#endregion

		public IShipping()
		{
			OnCreated();
		}

		[Column(Name = @"TC_VDR01", Storage = "_VDMSOrderId", CanBeNull = false, DbType = "NUMBER(19) NOT NULL", IsPrimaryKey = true)]
		public long VDMSOrderId
		{
			get
			{
				return this._VDMSOrderId;
			}
			set
			{
				if (this._VDMSOrderId != value)
				{
					this.OnVDMSOrderIdChanging(value);
					this.SendPropertyChanging();
					this._VDMSOrderId = value;
					this.SendPropertyChanged("VDMSOrderId");
					this.OnVDMSOrderIdChanged();
				}
			}
		}

		[Column(Name = @"TC_VDR02", Storage = "_LineNumber", CanBeNull = false, DbType = "NUMBER(38) NOT NULL", IsPrimaryKey = true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if (this._LineNumber != value)
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}

		[Column(Name = @"TC_VDR03", Storage = "_IssueNumber", CanBeNull = false, DbType = "VARCHAR2(30) NOT NULL")]
		public string IssueNumber
		{
			get
			{
				return this._IssueNumber;
			}
			set
			{
				if (this._IssueNumber != value)
				{
					this.OnIssueNumberChanging(value);
					this.SendPropertyChanging();
					this._IssueNumber = value;
					this.SendPropertyChanged("IssueNumber");
					this.OnIssueNumberChanged();
				}
			}
		}

		[Column(Name = @"TC_VDR04", Storage = "_PartCode", CanBeNull = false, DbType = "VARCHAR2(40) NOT NULL")]
		public string PartCode
		{
			get
			{
				return this._PartCode;
			}
			set
			{
				if (this._PartCode != value)
				{
					this.OnPartCodeChanging(value);
					this.SendPropertyChanging();
					this._PartCode = value;
					this.SendPropertyChanged("PartCode");
					this.OnPartCodeChanged();
				}
			}
		}

		[Column(Name = @"TC_VDR05", Storage = "_ShippingQuantity", CanBeNull = false, DbType = "NUMBER(38) NOT NULL")]
		public int ShippingQuantity
		{
			get
			{
				return this._ShippingQuantity;
			}
			set
			{
				if (this._ShippingQuantity != value)
				{
					this.OnShippingQuantityChanging(value);
					this.SendPropertyChanging();
					this._ShippingQuantity = value;
					this.SendPropertyChanged("ShippingQuantity");
					this.OnShippingQuantityChanged();
				}
			}
		}

		[Column(Name = @"TC_VDR06", Storage = "_ShippingDate", CanBeNull = false, DbType = "TIMESTAMP NOT NULL")]
		public System.DateTime ShippingDate
		{
			get
			{
				return this._ShippingDate;
			}
			set
			{
				if (this._ShippingDate != value)
				{
					this.OnShippingDateChanging(value);
					this.SendPropertyChanging();
					this._ShippingDate = value;
					this.SendPropertyChanged("ShippingDate");
					this.OnShippingDateChanged();
				}
			}
		}

		[Column(Name = @"TC_VDR07", Storage = "_Flag", CanBeNull = false, DbType = "CHAR(1) NOT NULL")]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if (this._Flag != value)
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
				this.PropertyChanging(this, emptyChangingEventArgs);
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (this.PropertyChanged != null)
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	}
